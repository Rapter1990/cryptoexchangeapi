server:
  port: 1927

spring:
  application:
    name: cryptoexchangeapi
  config:
    import: optional:file:.env[.properties]
  data:
    mongodb:
      host: ${MONGO_DB_HOST:localhost}
      port: ${MONGO_DB_PORT:27017}
      database: ${MONGO_DB_NAME:cryptoexchangedatabase}


# SWAGGER
springdoc:
  api-docs:
    enabled: true
  show-actuator: true

# CoinMarketCap API props
cmc:
  base-url: https://pro-api.coinmarketcap.com
  api-key: ${COIN_MARKET_CAP_API_KEY}
  cache-ttl: 10000 # 10 seconds

# Root namespace for Resilience4j Spring Boot integration
resilience4j:
  ratelimiter:
    instances:
      cmc:
        limit-for-period: 3         # Max number of calls permitted per refresh period - 3
        limit-refresh-period: 10s     # # Window length for replenishing permits - every 10 second
        timeout-duration: 0          # # How long a caller waits for a permit (0 = fail fast) - don't wait if bucket is empty
  retry:
    instances:
      cmc: # Instance name used in @Retry(name="cmc")
        max-attempts: 3 # Max attempts per call (initial try + retries)
        wait-duration: 200ms # Backoff between attempts
        retry-exceptions: # Which exceptions should trigger a retry
          - feign.RetryableException # Feign signals transient I/O/timeouts as RetryableException
  circuitbreaker:
    instances:
      cmc: # Instance name used in @CircuitBreaker(name="cmc")
        sliding-window-type: COUNT_BASED # Use a fixed-size rolling window based on call count
        sliding-window-size: 10 # Number of calls recorded in the rolling window
        failure-rate-threshold: 50 # % of failed calls in the window that will OPEN the breaker
        wait-duration-in-open-state: 10s # How long to stay OPEN before moving to HALF_OPEN

# Cache Logging
logging:
  level:
    org.springframework.cache: TRACE
    org.springframework.cache.interceptor: TRACE
